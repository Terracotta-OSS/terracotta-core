#
#
#  The contents of this file are subject to the Terracotta Public License Version
#  2.0 (the "License"); You may not use this file except in compliance with the
#  License. You may obtain a copy of the License at
#
#  http://terracotta.org/legal/terracotta-public-license.
#
#  Software distributed under the License is distributed on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
#  the specific language governing rights and limitations under the License.
#
#  The Covered Software is Terracotta Core.
#
#  The Initial Developer of the Covered Software is
#  Terracotta, Inc., a Software AG company
#
#

###########################################################################################
#                                                                                         #
#  This is the default TCProperties that can be accessed from DSO code base by calling    #
#  TCProperties.getProperties().getProperty("key") or one of the Typed methods.           #
#                                                                                         #
#  The values here are the default values that can be overridden by placing a             #
#  tc.properties in the base directory where tc.jar resides at runtime.                   #
#                                                                                         #
###########################################################################################

###########################################################################################
# Section                             : L2 Seda stage properties
# Description                         : This section contains configuration for SEDA stages for L2
# apply.stage.threads                 : Number of seda apply stage threads
# managedobjectrequeststage.threads   : Number of threads for object request seda stage
#                                       (experimental, do not change)
# managedobjectresponsestage.threads  : Number of threads for object response seda stage
# stage.sink.capacity                 : Capacity of seda stage queue, Integer.MAX_VALUE if not set
#                    (experimental, do not change)
###########################################################################################
#l2.seda.apply.stage.threads = 8
#l2.seda.managedobjectrequeststage.threads = 4
#l2.seda.managedobjectresponsestage.threads = 4
l2.seda.stage.sink.capacity = -1

###########################################################################################
# Section               : L1 Seda stage properties
# Description           : This section contains configuration for SEDA stages for L1
# stage.sink.capacity   : capacity of L1's seda stage queue, Integer.MAX_VALUE if not set
###########################################################################################
l1.seda.stage.sink.capacity = -1

###########################################################################################
# Section :  Network HA (nha)
# Description : If Networked HA is enabled then these values take effect
#    tcgroupcomm.handshake.timeout  - tc-group-comm handshake timeout milliseconds
#    tcgroupcomm.discovery.interval  - tc-group-comm member discovery interval milliseconds
#    send.timeout.millis   -  Number of milliseconds to retry sending a message
#    dirtydb.autoDelete    -  Delete old database if any automatically, during passive L2 startup
#    dirtydb.rolling       -  Retain latest rolling number of old databases in the backup directory.
#                                  If 0, all old databases will be retained.
#    autoRestart           -  Automatically restart L2 when it goes down (on few cases only.
#                                  like zap node errors, dirty database startup problems)
#    dirtydb.backup.enabled-  Creates BackUp of DirtyDB only If it is set to true.
###########################################################################################
l2.nha.tcgroupcomm.handshake.timeout = 30000
l2.nha.tcgroupcomm.discovery.interval = 1000
l2.nha.dirtydb.autoDelete = true
l2.nha.autoRestart = true

###########################################################################################
# Section                       : Misc L2 Properties
# Description                   : Other Miscellaneous L2 Properties
# startuplock.retries.enabled   : If true then L2s will try to lock indefinitely on the data
#                                 directory while starting up
###########################################################################################
server.classloader.compatibility = false
server.entity.deferment.queue.size = 1024
server.entity.processor.minthreads=4

###########################################################################################
# Section                           : L1 Connect Properties
# Description                       : This section contains properties controlling L1 connect feature
# socket.connect.timeout            : Socket timeout (ms) when connecting to server
# reconnect.waitInterval            : Sleep time (ms) between trying connections to the server
#                                     (values less than 10ms will be set to 10ms)
###########################################################################################
l1.socket.connect.timeout=10000
l1.socket.reconnect.waitInterval=1000


tc.transport.handshake.timeout=10000
tc.config.getFromSource.timeout=30000
tc.config.total.timeout=300000

###########################################################################################
# Section           : L1 Reconnect Properties
# Description       : This section contains properties controlling L1 reconnect feature
#
# Note that l1 get these properties from l2, so the local copy of l1 doesn't matter
#
###########################################################################################
l2.l1redirect.enabled = true

###########################################################################################
# Section           :  Common Logging properties for both L1 and L2
# Description       : Logging attributes that can be overridden.
# maxBackups        : The maximum number of backup log files to keep
# maxLogFileSize    : The maximum size of a log file in megabytes
# longgc.threshold  : JVM GC taking greater than the time mentioned will be logged
###########################################################################################
logging.maxBackups = 20
logging.maxLogFileSize = 512
logging.longgc.threshold = 8000

###########################################################################################
# Section                             : Common Stage Monitoring properties for both L1 and L2
# Description                         : Stage monitoring can be enabled or disabled for debugging.
# gc.monitor.enabled                  : <true/false>    - Enable or Disable GC Monitoring
# gc.monitor.delay                    : long            - frequency in milliseconds
# stage.monitor.enabled               : <true/false>    - Enable or Disable stage Monitoring
# stage.monitor.delay                 : long            - frequency in milliseconds
###########################################################################################

tc.gc.monitor.enabled = false
tc.gc.monitor.delay = 5000
tc.stage.monitor.enabled = false
tc.stage.monitor.delay = 5000
tc.messages.grouping.enabled = false
tc.messages.grouping.maxSizeKiloBytes = 1024
tc.messages.packup.enabled = false

###########################################################################################
# Section             :  Common property for TC Management MBean
# Description         : TC Management MBeans can be enabled/disabled
# mbeans.enabled      : <true/false>   - All mbeans enabled/disabled
# test.mbeans.enabled : <true/false>   - Test mode mbeans enabled/disabled
###########################################################################################
tc.management.mbeans.enabled = true
tc.management.test.mbeans.enabled = false

###########################################################################################
# Section :  Memory Monitor
# forcebasic : enable/disable only basic memory monitoring
###########################################################################################
memory.monitor.forcebasic = false

###########################################################################################
# Section       : TCP Settings
# tcpnodelay    : Enable/disable tcp packet batching
# keepalive     : Enable/disable tcp probe for running/broken connections
###########################################################################################
net.core.tcpnodelay = true
net.core.keepalive = false

###########################################################################################
# Section :  HealthChecker { server(l2)->client(l1), server(l2)->server(l2) (HA), client(l1)->server(l2) }
#  ping.enabled         - If true, healthchecker is enabled.
#  ping.idletime        - Connection idletime (in milliseconds), after which healthchecker
#                         starts its ping test.
#  ping.interval        - The interval (in milliseconds) between healthchecker sending ping
#                         messages to the peer node which doesn't reply to its previous msgs.
#  ping.probes          - Total number of ping messages to be sent to the peer node before
#                         concluding the peer is dead.
#  socketConnect        - If true, apart from above ping-probe cycle, healthcheker does extra
#                         check like socket connect (to detect long GC) to see if the peer has
#                         any traces of life left
#  socketConnectCount   - Max number of successful socket connect that healthcheker
#                         can trust. Beyond which, no socket connects will be
#                         attempted and peer node is tagged as dead.
#  socketConnectTimeout - Socket timeout (integer, in number of ping.interval) when
#                         connecting to the peer node. On timeout, healthchecker
#                         concludes peer node as dead irrespective of previous
#                         successful socket connects.
#  checkTime.enabled    - If true, checking time difference between hosts is enabled.
#  checkTime.interval   - The interval (in milliseconds) between healthchecker attempting
#                         to find any time difference between hosts.
#  checkTime.threshold  - The maximum allowed time difference (in milliseconds) between hosts.
#                         Healthchecker logs a warning message if the time difference exceeds this limit.
###########################################################################################

# L2 -> L2  : Networked Active-Passive
# These settings will detect a network disconnect (like a cable pull) in 10 seconds but
#   will allow a 40 second GC in the L2
l2.healthcheck.l2.ping.enabled = true
l2.healthcheck.l2.ping.idletime = 5000
l2.healthcheck.l2.ping.interval = 1000
l2.healthcheck.l2.ping.probes = 3
l2.healthcheck.l2.socketConnect = true
l2.healthcheck.l2.socketConnectTimeout = 5
l2.healthcheck.l2.socketConnectCount = 10
l2.healthcheck.l2.checkTime.enabled = true
l2.healthcheck.l2.checkTime.interval = 300000
l2.healthcheck.l2.checkTime.threshold = 300000

# L1 -> L2  : Health check
# These settings will detect a network disconnect (like a cable pull) in 10 seconds but
#   will allow upto 50 seconds GC in the L2
l1.healthcheck.l2.ping.enabled = true
l1.healthcheck.l2.ping.idletime = 5000
l1.healthcheck.l2.ping.interval = 1000
l1.healthcheck.l2.ping.probes = 3
l1.healthcheck.l2.socketConnect = true
l1.healthcheck.l2.socketConnectTimeout = 5
l1.healthcheck.l2.socketConnectCount = 13
l1.healthcheck.l2.checkTime.enabled = true
l1.healthcheck.l2.checkTime.interval = 300000
l1.healthcheck.l2.checkTime.threshold = 300000

###########################################################################################
# Section :  TCMessage debug monitoring
#   tcm.monitor.enabled - If enabled the count and size of TC messages will be collected and logged
#   tcm.monitor.delay - The delay (in seconds) between reporting to the log
###########################################################################################
tcm.monitor.enabled = false
tcm.monitor.delay = 5

###########################################################################################
# Section :  Stats Printer
#  stats.printer.intervalInMillis              - Interval at which gathered stats are printed
###########################################################################################
stats.printer.intervalInMillis = 5000

###########################################################################################
# Section :  LicenseManager
# productkey.resource.path                       - path to product key on your classpath
# productkey.path                                - path to product key
###########################################################################################
#productkey.resource.path=
#productkey.path=

###########################################################################################
# l2.dump.on.exception.timeout - After get an uncaught exception, the server takes a dump. If the
#                 dump doesn't happen within this timeout the server will exit (in seconds).
# l2.election.timout - Timeout in seconds for group election of the active
###########################################################################################
l2.dump.on.exception.timeout = 30
l2.logs.store = 1500
l2.election.timeout = 5
l2.classloader.compatibility = false

###########################################################################################
# Section :  L1 Shutdown Settings
# l1.shutdown.threadgroup.gracetime - time allowed for termination of all threads in the
#                    TC thread group (in milliseconds).
# l1.shutdown.force.finalization    - call System.runFinalization() at the end of the L1 shutdown procedure.
###########################################################################################
l1.shutdown.threadgroup.gracetime = 30000
l1.shutdown.force.finalization = false

