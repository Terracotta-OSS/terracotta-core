<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~
  ~  The contents of this file are subject to the Terracotta Public License Version
  ~  2.0 (the "License"); You may not use this file except in compliance with the
  ~  License. You may obtain a copy of the License at
  ~
  ~  http://terracotta.org/legal/terracotta-public-license.
  ~
  ~  Software distributed under the License is distributed on an "AS IS" basis,
  ~  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
  ~  the specific language governing rights and limitations under the License.
  ~
  ~  The Covered Software is Terracotta Core.
  ~
  ~  The Initial Developer of the Covered Software is
  ~  Terracotta, Inc., a Software AG company
  ~
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.terracotta.internal</groupId>
    <artifactId>terracotta-core-root</artifactId>
    <version>5.5-SNAPSHOT</version>
    <relativePath>..</relativePath>
  </parent>

  <artifactId>build-parent</artifactId>
  <name>build-parent</name>
  <packaging>pom</packaging>

  <licenses>
    <license>
      <name>Terracotta Public License</name>
      <url>http://www.terracotta.org/legal/terracotta-public-license</url>
    </license>
  </licenses>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <slf4j.version>1.7.25</slf4j.version>
    <logback.version>1.2.3</logback.version>
    <management-core-version>2.0.8</management-core-version>

    <gmaven-plugin.version>1.4</gmaven-plugin.version>
    <copy-maven-plugin.version>0.2.3.8</copy-maven-plugin.version>
    <surefire.version>2.15</surefire.version>
    <powermock.version>1.6.1</powermock.version>
    <hamcrest.version>1.3</hamcrest.version>
    <skip.testjar>false</skip.testjar>
    <localMavenRepository>${user.home}/.m2/repository</localMavenRepository>
    <checkstyle-suppressions-file>${basedir}/../checkstyle/suppressions.xml</checkstyle-suppressions-file>

    <tc.tests.configuration.properties.file>${project.build.testOutputDirectory}/tc.tests.properties</tc.tests.configuration.properties.file>
    <tc.config>-Dtc.config=tc-config.xml</tc.config>
    <tc.base-dir>${project.build.directory}</tc.base-dir>
    <com.tc.l1.modules.repositories>${localMavenRepository}</com.tc.l1.modules.repositories>
    <tc.tests.info.bootjars.normal>${basedir}/../target/dso-boot.jar</tc.tests.info.bootjars.normal>
    <tc.tests.info.property-files>${tc.tests.configuration.properties.file}</tc.tests.info.property-files>
    <tc.tests.info.temp-root>${project.build.directory}/temp</tc.tests.info.temp-root>
    <tc.tests.info.junit-test-timeout-inseconds>1800</tc.tests.info.junit-test-timeout-inseconds>
    <tc.tests.info.l2.startup.mode>internal</tc.tests.info.l2.startup.mode>
    <surefire.min-memory>64m</surefire.min-memory>
    <surefire.max-memory>512m</surefire.max-memory>
    <surefire.additional-jvm-args/>
    <should_skip_tests>true</should_skip_tests>
    <surefire.jvm.mode>-server</surefire.jvm.mode>
    <surefire.argLine>${surefire.jvm.mode}
      -Xms${surefire.min-memory}
      -Xmx${surefire.max-memory}
      -XX:MaxDirectMemorySize=1024m
      -XX:+HeapDumpOnOutOfMemoryError
      -Dtc.base-dir=${tc.base-dir} ${tc.config}
      -Dtc.tests.info.property-files=${tc.tests.info.property-files}
      -Dcom.tc.l1.modules.repositories=${localMavenRepository}
      -Dtc.install-root.ignore-checks=true
      ${surefire.additional-jvm-args}</surefire.argLine>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.terracotta</groupId>
        <artifactId>connection-api</artifactId>
        <version>${terracotta-apis.version}</version>
      </dependency>
      <dependency>
        <groupId>org.terracotta</groupId>
        <artifactId>standard-cluster-services</artifactId>
        <version>${terracotta-apis.version}</version>
      </dependency>
      <dependency>
        <groupId>org.terracotta</groupId>
        <artifactId>monitoring-support</artifactId>
        <version>${terracotta-apis.version}</version>
      </dependency>
      <dependency>
        <groupId>org.terracotta</groupId>
        <artifactId>entity-server-api</artifactId>
        <version>${terracotta-apis.version}</version>
      </dependency>
      <dependency>
        <groupId>org.terracotta</groupId>
        <artifactId>entity-client-api</artifactId>
        <version>${terracotta-apis.version}</version>
      </dependency>
      <dependency>
        <groupId>org.terracotta.internal</groupId>
        <artifactId>tc-messaging</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-cli</groupId>
        <artifactId>commons-cli</artifactId>
        <version>1.3.1</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.4</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
      </dependency>

      <!-- Dependencies for core Terracotta artifacts -->
      <dependency>
        <groupId>org.terracotta.internal</groupId>
        <artifactId>tc-config-parser</artifactId>
        <version>${terracotta-configuration.version}</version>
      </dependency>
      <dependency>
        <groupId>org.terracotta</groupId>
        <artifactId>tcconfig-schema</artifactId>
        <version>${terracotta-configuration.version}</version>
      </dependency>

      <!-- tests -->
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-all</artifactId>
        <version>1.9.5</version>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.12</version>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-module-junit4</artifactId>
        <version>${powermock.version}</version>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-api-mockito</artifactId>
        <version>${powermock.version}</version>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-all</artifactId>
        <version>${hamcrest.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <resources>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
        <filtering>false</filtering>
      </resource>
      <resource>
        <directory>${basedir}/src/main/filtered-resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.gmaven</groupId>
          <artifactId>gmaven-plugin</artifactId>
          <version>${gmaven-plugin.version}</version>
          <executions>
            <execution>
              <id>generate-test-properties</id>
              <phase>process-test-resources</phase>
              <goals>
                <goal>execute</goal>
              </goals>
              <configuration>
                <source><![CDATA[
                  Properties outputProperties = new Properties()
                  project.properties.each { key, value ->
                    if (key =~ /^tc\.tests\./) {
                      outputProperties.setProperty(key, value)
                    }
                  }
                  String propertiesFileName = project.properties.getProperty(
                      "tc.tests.configuration.properties.file")
                  File propertiesFile = new File(propertiesFileName)
                  assert !propertiesFile.isDirectory()
                  propertiesFile.parentFile.mkdirs()
                  def outputStream = new FileOutputStream(propertiesFile)
                  try {
                    outputProperties.store(outputStream, "")
                  }
                  finally {
                    outputStream.close()
                  }
                  ]]></source>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${surefire.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>workaround-windows</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
        <localMavenRepository>C:\DOCUME~1\${user.name}\.m2\repository</localMavenRepository>
      </properties>
    </profile>
  </profiles>

  <repositories>
    <repository>
      <id>terracotta-snapshots</id>
      <url>http://www.terracotta.org/download/reflector/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>terracotta-releases</id>
      <url>http://www.terracotta.org/download/reflector/releases</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>terracotta-snapshots</id>
      <url>http://www.terracotta.org/download/reflector/snapshots</url>
    </pluginRepository>
    <pluginRepository>
      <id>terracotta-releases</id>
      <url>http://www.terracotta.org/download/reflector/releases</url>
    </pluginRepository>
  </pluginRepositories>
</project>
